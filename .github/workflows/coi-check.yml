name: COI check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 3 * * *"   # nightly @ 03:00 UTC
  workflow_dispatch:

concurrency:
  group: coi-headless-${{ github.ref }}
  cancel-in-progress: true

jobs:
  headless-coi:
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Edge path diagnostics
        shell: pwsh
        run: |
          where msedge 2>$null || echo "msedge not found in PATH"
          Get-ChildItem "C:\Program Files\Microsoft\Edge\Application" -ErrorAction SilentlyContinue |
            Select-Object Name,FullName | Format-Table -AutoSize

      - name: Run COI headless check (Edge, 3x retry, 60s timeout)
        shell: pwsh
        run: |
          $max=3; $delay=5
          for($a=1;$a -le $max;$a++){
            & pwsh -NoLogo -NoProfile -ExecutionPolicy Bypass -File .\scripts\coi-check.ps1 `
              -Url 'https://oceansai.org/isolation' -ExpectCOEP require-corp -BrowserChoice edge -TimeoutSec 60
            $code = $LASTEXITCODE
            if ($code -eq 0) { exit 0 }
            if ($a -lt $max) {
              Write-Warning "Attempt $a failed (exit $code). Retrying in ${delay}sâ€¦"
              Start-Sleep -Seconds $delay
            } else {
              Write-Error "All attempts failed (exit $code)"
              exit $code
            }
          }

      - name: Collect headless logs
        if: always()
        shell: pwsh
        run: |
          $logs = Get-ChildItem $env:TEMP -Recurse -Filter headless-*.log -ErrorAction SilentlyContinue
          $out = Join-Path $env:RUNNER_TEMP "coi-logs-edge"
          New-Item -ItemType Directory -Force -Path $out | Out-Null
          if ($logs) {
            foreach ($f in $logs) {
              Write-Host "::group::$($f.FullName)"; Get-Content $f.FullName; Write-Host "::endgroup::"
              Copy-Item $f.FullName $out -Force
            }
          }

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coi-logs-edge
          path: ${{ runner.temp }}/coi-logs-edge/
          if-no-files-found: ignore
