name: COI headers smoke

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 3 * * *"   # nightly @ 03:00 UTC
  workflow_dispatch:

concurrency:
  group: coi-headers-${{ github.ref }}
  cancel-in-progress: true

jobs:
  headers-smoke:
    name: headers-smoke
    runs-on: windows-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        path: ['/', '/isolation', '/robots.txt', '/404']
    env:
      DOMAIN: 'https://oceansai.org'
    steps:
      - name: Check COOP/COEP (${{ matrix.path }})
        shell: pwsh
        run: |
          $url = "${env:DOMAIN}${{ matrix.path }}"
          Write-Host "Checking: $url"

          $max=3; $delay=3; $res=$null
          for($a=1;$a -le $max;$a++){
            try {
              $res = Invoke-WebRequest -Uri $url -TimeoutSec 30 -MaximumRedirection 5 -SkipHttpErrorCheck -ErrorAction Stop
              break
            } catch {
              if ($a -eq $max) { throw }
              Write-Warning "Attempt $a failed: $($_.Exception.Message). Retrying in ${delay}s…"
              Start-Sleep -Seconds $delay
            }
          }

          $coop = ($res.Headers['cross-origin-opener-policy'] | Select-Object -First 1)
          $coep = ($res.Headers['cross-origin-embedder-policy'] | Select-Object -First 1)
          "Status → $($res.StatusCode) $($res.StatusDescription)"
          "COOP  → $coop"
          "COEP  → $coep"

          $coopOk = ($coop -eq 'same-origin')
          $coepOk = @('require-corp','credentialless') -contains $coep
          if (-not $coopOk -or -not $coepOk) {
            throw "COI headers failed: COOP='$coop' COEP='$coep'"
          }
          "COI headers OK ✅"
